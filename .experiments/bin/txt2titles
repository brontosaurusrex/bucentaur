#!/bin/bash

# txt2titles
# text to images for off piloting purposes

# usage: 
# txt2titles text.txt
# Where each new image will be separated by empty line in file text.txt
# or
# txt2titles "text1" "text2" "text3"

# misc, list font names that imagemagick convert can use
# convert -list font | grep Font

# tmp dir
tmp="/tmp/txt2titles$RANDOM-$$"
tmpfile="/tmp/txt2titles$RANDOM-$$"
trap '[ -n "$tmp" ] && rm -fr "$tmp" "$tmpfile"' EXIT
mkdir -m 700 "$tmp" || { echo '!! unable to create a tmpdir' >&2; tmp=; exit 1; }
mkdir -m 700 "$tmpfile" || { echo '!! unable to create a file tmpdir' >&2; tmp=; exit 1; }

# here
here="$(pwd)" 2>/dev/null

# cover the option when input is not file, but bunch of text input arguments
if [ ! -f "$1" ]; then
    echo "$1 is not a file."

    # So lets make one
    while [ $# -gt 0 ]; do

        echo "$1" >> "$tmpfile/input.txt"
        echo >> "$tmpfile/input.txt" # empty line for separation purposes

    shift
    done
    #vim "$tmpfile/input.txt"
    file="$tmpfile/input.txt"

else

    file="$1"

fi

# get base-name to be used as csplit prefix
baseext=$(basename "${file}") && base="${baseext%.*}"

# split based on empty line https://stackoverflow.com/questions/1644532/how-to-split-file-on-first-empty-line-in-a-portable-way-in-shell-e-g-using-sed

file=$(readlink -f "$file")
pushd "$tmp" >/dev/null || exit
csplit -f "$base" -s "$file" '/^$/' '{*}' 
popd >/dev/null || exit

# cat
#ls "$tmp"

# What fonts can we have
doWeHavefont () {
    fontname="$1"
    #fc-list | grep -i "$fontname" >/dev/null
    convert -list font | grep -i "Font: $fontname" >/dev/null
}

fontarray=(
Ubuntu-Condensed
Nimbus-Sans-L
Lato-Medium
OstrichSans-Medium
OstrichSans-Heavy
Open-Sans
Roboto
Courier-Screenplay
Fantasque-Sans-Mono-Regular
Old-Standard-TT-Regular
Ostrich-Sans-Bold
OstrichSans-Medium
)

for m in "${fontarray[@]}"
do
    doWeHavefont "$m" && font="$m" 
    # last one in array has priority
done

if [[ -z "$font" ]]; then
    echo "None of the fonts defined in array:" 
    ( IFS=$'\n'; echo "${fontarray[*]}" )
    echo "are on the system, exiting."
    exit 1
else
    echo "$font font present and ready for action."
    echo # empty line
fi
#exit # tmp

# font size
size="80"

# make images to current dir
for file in "$tmp/"*; do
    
    #cat "$file"
    value="$(<"$file")"
    echo "$value"

    if [ -n "$value" ]; then # If value is not empty

        # white
        convert -background transparent -fill "#fff" -font "${font}" -interline-spacing 20 -pointsize "${size}" -size 1920x1080 -gravity center caption:"${value}" -scale 200% -blur 0x1 -scale 50% "${file}a".png &
        # black
        convert -background transparent -fill "#000" -font "${font}" -interline-spacing 20 -pointsize "${size}" -size 1920x1080 -gravity center caption:"${value}" -blur 0x3 "${file}b".png
        wait

        # comp
        composite -gravity North -geometry +0-2 "${file}a".png "${file}b".png "${file}".png

        rm "${file}a".png "${file}b".png 

    fi


done

# clean
pushd "$tmp" >/dev/null || exit
mv -- *.png "${here}"
popd >/dev/null || exit
