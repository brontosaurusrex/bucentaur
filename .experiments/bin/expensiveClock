#!/bin/bash

# expensiveClock

# required: firefox, jp2a, imagemagick (just for png2jpg)

# checks
#command -v firefox >/dev/null 2>&1 || { echo "I need firefox, exiting." >&2; exit 1; }
command -v jp2a >/dev/null 2>&1 || { echo "I need jp2a, exiting." >&2; exit 1; }
command -v convert >/dev/null 2>&1 || { echo "I need im convert, exiting." >&2; exit 1; }

# modern firefox whereabouts
#app=($HOME/apps/firefox/firefox)
app=(firefox)
command -v "${app[@]}" >/dev/null 2>&1 || { echo "I need modern firefox, exiting." >&2; exit 1; }

# clear once
clear
printf "\\33[?25l" # hide cursor https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797

# center text custom
centertext(){
    columns=$(tput cols)
    string="$1"
    printf "%*s\\n" $(((${#string}+columns)/2)) "${string//R/ }"
}

# tmp dir http://mywiki.wooledge.org/BashFAQ/062
tmp="/tmp/$RANDOM-$$"
trap '[ -n "$tmp" ] && rm -fr "$tmp"; printf "\\33[?25h"; kill %%' EXIT # unhide cursor on exit
mkdir -m 700 "$tmp" || { echo '!! unable to create a tmpdir' >&2; tmp=; exit 1; }

# scripted svg found on web
cat > "$tmp/analog.svg" << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!--
  - Full screen clock (analog)
  - Copyright (c) 2020 Project Nayuki
  -
  - https://www.nayuki.io/page/full-screen-clock-javascript
  -->
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="-1 -1 2 2" style="background-color:#000000" stroke="none" fill="none">
        <defs>
                <circle id="hour-mark" cx="0" cy="-0.95" r="0.04"/>
        </defs>
        <g id="hour-marks" fill="#FFFFFF"/>

        <g id="hands" stroke="#FFFFFF" stroke-linecap="round" style="display:none">
                <line id="hour-hand"   x1="0" y1="0" x2="0" y2="-0.50" stroke-width="0.11"/>
                <line id="minute-hand" x1="0" y1="0" x2="0" y2="-0.75" stroke-width="0.07"/>
        </g>


        <script>
        <![CDATA[
        "use strict";

        function initialize() {
                for (var i = 0; i < 12; i++) {
                        var elem = document.getElementById("hour-marks").appendChild(
                                document.createElementNS(document.documentElement.namespaceURI, "use"));
                        elem.setAttribute("href", "#hour-mark");
                        rotateElem(elem, i / 12 * 360);
                }
                updateClock();
                document.getElementById("hands").removeAttribute("style");
        }

        function updateClock() {
                var d = new Date();
                rotateElem(document.getElementById("hour-hand"),
                        (d.getHours() + d.getMinutes() / 60) / 12 * 360);
                rotateElem(document.getElementById("minute-hand"),
                        d.getMinutes() / 60 * 360);
                setTimeout(updateClock, 60000 - d.getTime() % 60000 + 100);
        }

        function rotateElem(elem, degrees) {
                elem.setAttribute("transform", "rotate(" + degrees + ")");
        }

        initialize();
        ]]>
        </script>
</svg>
EOF

#debug
cd "$tmp" || exit
python3 -m http.server >/dev/null 2>&1 &

main () {
# main
"${app[@]}" --screenshot --window-size=1000,1000 "$tmp/woot.png" "http://localhost:8000/analog.svg" >/dev/null 2>&1 
convert "$tmp/woot.png" -resize 1100\!x1000 "$tmp/woot.jpg" || exit # fix final aspect ratio by resizing
jp2a -f --chars="R.xX" "$tmp/woot.jpg" > "$tmp/tmp.txt" || exit # using 'R' as a placeholder for easier centering, will be replaced with space

# center
printf "\\033[H" # cursor to home
while read -r line ; do
    centertext "$line"
done <"$tmp/tmp.txt"
}

# loop 4ever
while true; do # updating each full minute
    main
    sleep $((60 - $(date +%s) % 60)) 
done
