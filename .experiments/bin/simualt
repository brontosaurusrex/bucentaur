#!/bin/bash

# simualt

# simulate alt hold down until left mice is clicked

# required
command -v xdotool >/dev/null 2>&1 || { >&2 echo "I need xdotool." ; exit 1; }
command -v xinput >/dev/null 2>&1 || { >&2 echo "I need xinput." ; exit 1; }
command -v awk >/dev/null 2>&1 || { >&2 echo "I need awk." ; exit 1; }

superecho () {
    (sleep "$1" && notify-send -t 1500 "$2" & echo "$2") &
}

# hold alt
xdotool keydown alt && superecho "0" "alt is on"

# wait for mouse left click before releasing
mouse="$(xinput --list | awk -F 'id=|\\[' '/mouse|Mouse/ {print $2}')"
mouse="${mouse//[[:space:]]}"

# https://stackoverflow.com/questions/44133590/how-to-detect-when-mouse-1-button-is-pressed-then-run-a-bash-script
while :; do
    state="$(xinput --query-state "$mouse")"
    #echo "$state" # debug
    # If any button is pressed, abort holding alt
    if [[ "$state" == *"=down"* ]]; then
    
        # depress alt
        xdotool keyup alt && superecho "0.5" "alt is off"
        exit
        
    fi

sleep .1s
done

# Tint2 simple button (P) example
#---simualt-button--------------------
#button = new
#button_font = cuprum 12
#button_font_color = #111111 70
#button_text = simualt
#button_lclick_command = simualt
#button_centered = 1

