#!/bin/bash

# beepmein

# A little wrapper around linux 'at' command, that will beep you at specific time, see --help.
# On Debian systems make sure 'at' is installed with --no-install-recommends.

# config
alarmSample="$HOME/.cache/beepmein/fly.mp3" # change me

# required
command -v at >/dev/null 2>&1 || { >&2 echo "I need at: sudo apt install --no-install-recommends at" ; exit 1; }
command -v speaker-test >/dev/null 2>&1 || { >&2 echo "I need speaker-test from alsa-utils (for reminder sound)." ; exit 1; }
command -v notify-send >/dev/null 2>&1 || { >&2 echo "I need notify-send." ; exit 1; }
command -v mpv >/dev/null 2>&1 || { >&2 echo "I need mpv (for alarm sounds)." ; exit 1; }

# help
help () { 
cat << EOF

       beepmein now + 3 minutes 
                ^                
                'at' time format
                
       beepmein 22:10
                ^
                also 'at' time format
                
       beepmein 3
                ^                
                in 3 minutes (beepmein shortcut)
                
       beepmein --alarm 8:00 
                  ^
                  Will play (longer) audio sample,
                  that you defined by setting alarmSample.
                  Stop with 'killall mpv'.
                  --alarm must be first parameter.
    
       beepmein --test # test beep and notification
       
       # More testing
       beepmein --reaction reminder_text
       beepmein --reaction --alarm alarm_text
       
       beepmein --help # this help
                
       # Notes:
       at -l      # will list pending jobs
       atrm <num> # will remove job <num>

EOF
}

# reminder sound
beep () {
    [ -z "$1" ] && loops="1" || loops="$1"
    for ((i=1; i<=loops; i++))
    do
        timeout -s HUP 0.1 speaker-test -t sine -f 1000  > /dev/null 2>&1
        sleep 0.1
    done
}

# test audio and notifications
test () {
    echo "notify test"
    notify-send "notify test" || echo "failed"
    echo
    echo "internal beep test used for reminders"
    beep "3" || echo "failed"
    echo
    echo "mpv sample test used for alarms"
    mpv --no-resume-playback "$alarmSample" || echo "failed"
}

# help or test
if [ "$1" == "--help" ] || [ "$1" == "-h" ] || [ $# -eq 0 ]; then
    help; exit
elif [ "$1" == "--test" ]; then
    test; exit
fi

# main
if [ "$1" != "--reaction" ] ; then
    if [ "$1" == "--alarm" ] ; then
        [[ -f "$alarmSample" ]] || { >&2 echo "Note: alarmSample $alarmSample not found, you may want to configure the script."; exit 1; }
        alarm="--alarm" && shift
    fi
    # input
    attime="$*" #concat
    # special case for minutes
    if [[ $attime == ?(-)+([0-9]) ]] ; then # is integer
        attime="now + $attime minutes"
    fi
    read -rp "reason? " reason
    #reason="$(printf "$(yad --separator="" --form --field 'reason?':TXT)\n")"
    [[ -z "$reason" ]] && reason="beep beep beep"
    echo "beepmein: $attime, reason: $reason"
    # set 'at'
    at "$attime" <<< "$(echo "beepmein --reaction $alarm '${reason}'")" > /dev/null 2>&1
else
    # reaction
    shift
    if [ "$1" == "--alarm" ]; then
        shift
        beep 3 &
        mpv --no-resume-playback --no-video "$alarmSample" &
        #radioClicky -p &
        notify-send "$1"
    else
        beep "3" &
        notify-send "$1"
    fi
fi
